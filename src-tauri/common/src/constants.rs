pub const DATABASE_URL: &'static str = "sqlite:./mes-extra.db?mode=rwc";

pub const FLOW_EXPORT_SQL :&str = r"
WITH T_FLOW AS (
SELECT
					DISTINCT 
					B.PRODUCT_DEF_NAME,
					B.PRODUCT_DEF_VERSION,
					D.PROCESS_FLOW_NAME,
					D.PROCESS_FLOW_VERSION,
					D.PROCESS_FLOW_SEQ_NAME,
					D.PROCESS_FLOW_SEQ_TYPE,
					D.IDX,
					D.PROCESS_NAME,
					D.PROCESS_VERSION,
					D.PROCESS_STAGE_NAME,
					D.PROCESS_GROUP1,
					D.PROCESS_GROUP2,
					P.DESCRIPTION,
					P.PROCESS_GROUP1 AS G1,
					P.PROCESS_GROUP2 AS G2,
					F.PROCESS_CAPABILITY_NAME,
					F.RECIPE_NAME,
					F.RETICLE_GROUP_NAME,
					F.PROBE_CARD_NAME,
					F.DC_SPEC_NAME,
					E.TO_PROCESS_FLOW_NAME,
					E.TO_PROCESS_FLOW_VERSION,
					E.TO_PROCESS_FLOW_SEQ_NAME,
					E.RET_PROCESS_FLOW_SEQ_NAME,
					E.REWORK_COUNT_LIMIT,
					Q.PROCESS_FLOW_SEQ_NAME AS QTIME_FROM_SEQ,
					Q.FROM_EVENT_NAME,
					Q.TO_PROCESS_FLOW_SEQ_NAME AS QTIME_TO_SEQ,
					Q.TO_EVENT_NAME,
					Q.QUEUE_TIME_TYPE,
					Q.QUEUE_TIME_LIMIT,
					T.REQUIRE_CONTAMINATION_LEVELS,
					T.AFFECT_CONTAMINATION_LEVEL
FROM
					PRODUCT_DEF B
LEFT JOIN PROCESS_FLOW_SEQ D ON
					(
											(
												B.PROCESS_FLOW_VERSION != 'AA'
		AND B.PROCESS_FLOW_NAME = D.PROCESS_FLOW_NAME
		AND B.PROCESS_FLOW_VERSION = D.PROCESS_FLOW_VERSION
											)
	OR
									(
												B.PROCESS_FLOW_VERSION = 'AA'
		AND B.PROCESS_FLOW_NAME = D.PROCESS_FLOW_NAME
		AND B.PRODUCT_DEF_STATE = 'Active'
											)
										)
LEFT JOIN PROCESS_STEP P ON
					D.PROCESS_NAME = P.PROCESS_STEP_NAME
LEFT JOIN PROCESS_FLOW_CONTENT F ON
					D.PROCESS_FLOW_NAME = F.PROCESS_FLOW_NAME
	AND D.PROCESS_FLOW_VERSION = F.PROCESS_FLOW_VERSION
	AND D.PROCESS_FLOW_SEQ_NAME = F.PROCESS_FLOW_SEQ_NAME
LEFT JOIN PROCESS_FLOW_ALTER E ON
					E.PROCESS_FLOW_NAME = D.PROCESS_FLOW_NAME
	AND D.PROCESS_FLOW_VERSION = E.PROCESS_FLOW_VERSION
	AND D.PROCESS_FLOW_SEQ_NAME = E.PROCESS_FLOW_SEQ_NAME
LEFT JOIN PROCESS_FLOW_QUEUE_TIME Q ON
					D.PROCESS_FLOW_NAME = Q.PROCESS_FLOW_NAME
	AND D.PROCESS_FLOW_VERSION = Q.PROCESS_FLOW_VERSION
	AND D.PROCESS_FLOW_SEQ_NAME = Q.PROCESS_FLOW_SEQ_NAME
LEFT JOIN PROCESS_FLOW_CONTAMINATION T ON
					D.PROCESS_FLOW_NAME = T.PROCESS_FLOW_NAME
	AND D.PROCESS_FLOW_VERSION = T.PROCESS_FLOW_VERSION
	AND D.PROCESS_FLOW_SEQ_NAME = T.PROCESS_FLOW_SEQ_NAME
									)
									SELECT
					A.PROCESS_FLOW_NAME,
					A.PROCESS_FLOW_VERSION,
					A.PROCESS_FLOW_SEQ_NAME,
					A.IDX,
					A.PROCESS_NAME,
					A.PROCESS_VERSION,
					A.PROCESS_STAGE_NAME,
					A.PROCESS_GROUP1,
					A.PROCESS_GROUP2,
					A.DESCRIPTION,
					A.G1,
					A.G2,
					A.PROCESS_CAPABILITY_NAME,
					CASE
						WHEN INSTR(A.RECIPE_NAME , '$') > 0 THEN A.RECIPE_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.RECIPE_NAME
	END AS RECIPE_NAME,
					CASE
						WHEN INSTR(A.DC_SPEC_NAME , '$') > 0 THEN A.DC_SPEC_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.DC_SPEC_NAME
	END AS DC_SPEC_NAME,
					CASE
						WHEN INSTR(A.RETICLE_GROUP_NAME , '$') > 0 THEN A.RETICLE_GROUP_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.RETICLE_GROUP_NAME
	END AS RETICLE_GROUP_NAME,
					LISTAGG( DISTINCT C.EQUIPMENT_NAME, ' | ') EQP_NAMES,
					LISTAGG( DISTINCT E.DESCRIPTION , ' | ') EQP_DESC,
					LISTAGG( DISTINCT C.EQUIPMENT_RECIPE_NAME, ' | ') EQP_RECIPES,
					A.TO_PROCESS_FLOW_NAME,
					A.TO_PROCESS_FLOW_VERSION,
					A.TO_PROCESS_FLOW_SEQ_NAME,
					A.RET_PROCESS_FLOW_SEQ_NAME,
					A.REWORK_COUNT_LIMIT,
					A.QTIME_FROM_SEQ,
					A.FROM_EVENT_NAME,
					A.QTIME_TO_SEQ,
					A.TO_EVENT_NAME,
					A.QUEUE_TIME_TYPE,
					A.QUEUE_TIME_LIMIT,
					A.REQUIRE_CONTAMINATION_LEVELS,
					A.AFFECT_CONTAMINATION_LEVEL
FROM
					T_FLOW A
LEFT JOIN PRODUCT_DEF_PF_PARAMETER B ON
					A.PRODUCT_DEF_NAME = B.PRODUCT_DEF_NAME
	AND A.PRODUCT_DEF_VERSION = B.PRODUCT_DEF_VERSION
	AND A.PROCESS_FLOW_NAME = B.PROCESS_FLOW_NAME
	AND a.PROCESS_FLOW_VERSION = B.PROCESS_FLOW_VERSION
	AND A.PROCESS_FLOW_SEQ_NAME = B.PROCESS_FLOW_SEQ_NAME
	AND PARAMETER_NAME = REPLACE(A.RECIPE_NAME, '$', '')
LEFT JOIN EQP_RECIPE C ON
					A.PROCESS_CAPABILITY_NAME = C.PROCESS_CAPABILITY_NAME
	AND C.RECIPE_NAME = CASE
						WHEN INSTR(A.RECIPE_NAME , '$') > 0 THEN B.PARAMETER_VALUE
		ELSE A.RECIPE_NAME
	END
LEFT JOIN EQUIPMENT_DEF E ON C.EQUIPMENT_NAME = E.EQUIPMENT_NAME
WHERE
	1 = 1
	AND A.PRODUCT_DEF_NAME = :1
	AND A.PRODUCT_DEF_VERSION = :2
	AND A.PROCESS_FLOW_NAME = :3
	AND A.PROCESS_FLOW_VERSION = :4
GROUP BY
					A.PROCESS_FLOW_NAME,
					A.PROCESS_FLOW_VERSION,
					A.PROCESS_FLOW_SEQ_NAME,
					A.PROCESS_FLOW_SEQ_TYPE,
					A.IDX,
					A.PROCESS_FLOW_SEQ_NAME,
					A.process_stage_name,
					A.PROCESS_NAME,
					A.PROCESS_VERSION,
					A.PROCESS_STAGE_NAME,
					A.PROCESS_GROUP1,
					A.PROCESS_GROUP2,
					A.DESCRIPTION,
					E.DESCRIPTION,
					A.G1,
					A.G2,
					A.PROCESS_CAPABILITY_NAME,
					CASE
						WHEN INSTR(A.RECIPE_NAME , '$') > 0 THEN A.RECIPE_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.RECIPE_NAME
	END ,
					CASE
						WHEN INSTR(A.DC_SPEC_NAME , '$') > 0 THEN A.DC_SPEC_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.DC_SPEC_NAME
	END,
					CASE
						WHEN INSTR(A.RETICLE_GROUP_NAME , '$') > 0 THEN A.RETICLE_GROUP_NAME || '=' || B.PARAMETER_VALUE
		ELSE A.RETICLE_GROUP_NAME
	END,
					A.TO_PROCESS_FLOW_NAME,
					A.TO_PROCESS_FLOW_VERSION,
					A.TO_PROCESS_FLOW_SEQ_NAME,
					A.RET_PROCESS_FLOW_SEQ_NAME,
					A.REWORK_COUNT_LIMIT,
					A.QTIME_FROM_SEQ,
					A.FROM_EVENT_NAME,
					A.QTIME_TO_SEQ,
					A.TO_EVENT_NAME,
					A.QUEUE_TIME_TYPE,
					A.QUEUE_TIME_LIMIT,
					A.REQUIRE_CONTAMINATION_LEVELS,
					A.AFFECT_CONTAMINATION_LEVEL
ORDER BY
					A.PROCESS_FLOW_NAME,
					A.PROCESS_FLOW_VERSION,
					A.PROCESS_FLOW_SEQ_NAME
";